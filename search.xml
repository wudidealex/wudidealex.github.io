<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>acm部分做题记录</title>
      <link href="2020/11/28/acm-bu-fen-zuo-ti-ji-lu/"/>
      <url>2020/11/28/acm-bu-fen-zuo-ti-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="acm做题部分记录"><a href="#acm做题部分记录" class="headerlink" title="acm做题部分记录"></a>acm做题部分记录</h1><h2 id="hdoj-2036改革春风吹满地"><a href="#hdoj-2036改革春风吹满地" class="headerlink" title="hdoj 2036改革春风吹满地"></a>hdoj 2036改革春风吹满地</h2><ul><li>简述：（变成一般问题的话）一个多边形告诉你边数（定点数）为n，然后是按照逆时针顺序给出的n个顶点的坐标（x1, y1, x2, y2… xn, yn），然后求他的面积。</li></ul><p>这题最简单最快的方法就是叉乘法（原理不懂不要紧，记住公式，反正很容易记）</p><p>部分代码实现</p><blockquote><pre><code>   for (int i = 0; i &lt; n; i++) &#123;                int t = i + 1;                if (t == n) &#123;                    t = 0;                &#125;                s = s+(a[i] * b[t] - a[t] * b[i])/2.0;            &#125;</code></pre></blockquote><p>这当中，数组a代表x坐标，数组b代表y坐标，从i=0（第一个点）叉乘到i=n-1（最后一个点）</p><p>这些点是逆时针顺序的，如果是顺时针，那么求出来的值是负数，就要在前面加一个绝对值<code>Math.abs</code></p><p>上面代码翻译成数学就是:</p><p>s = [（x1 * y2 - x2 * y1）+（x2 * y3 - x3 * y2) + ….. + (x(n - 2) * y(n - 1)-x(n - 1) * y(n - 2))+(x(n-1) * y0 - x0 * y(n-1)) ]/2.0</p><p>接下来就是喜闻乐见的整体代码</p><blockquote><pre><code>   import java.util.Scanner;   public class Main &#123;        public static void main(String[] args) &#123;            Scanner in = new Scanner(System.in);            while (in.hasNext()) &#123;                int n = in.nextInt();                if (n == 0) &#123;                    break;        &#125;        int  [] a = new int [n];        int  [] b = new int [n];        for (int i = 0; i &lt; n; i++) &#123;            a[i] = in.nextInt();            b[i] = in.nextInt();        &#125;        double s = 0;        for (int i = 0; i &lt; n; i++) &#123;            int t = i + 1;            if (t == n) &#123;                t = 0;            &#125;            s = s+(a[i] * b[t] - a[t] * b[i])/2.0;        &#125;        System.out.println(Math.abs(s));    &#125;&#125;</code></pre><p>}</p></blockquote><h2 id="hdoj2045动态规划"><a href="#hdoj2045动态规划" class="headerlink" title="hdoj2045动态规划"></a>hdoj2045动态规划</h2><p>题目链接：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=2045"></a></p><p>【动态规划】:把多阶段过程转化为一系列单阶段问题，利用各阶段之间的关系，<br>逐个求解，创立了解决这类过程优化问题的新方法——动态规划。</p><ul><li><p>思路：设f(n)代表当有n个方格时，满足条件的涂法</p><p>易知：f(1)=3;f(2)=6; f(3)=6;</p><ul><li>假设第n-1个格子的颜色跟第1个相同，<br> 因为第n-1个格子颜色已确定，第n个格子可以涂的颜色有两种，<br> 故为2*f(n-2)</li></ul><p>​                    怎么理解:    以n=4时为例</p><ul><li><u>R G</u> R (P/G) 下划线两个，代表f(2),因为在第1个和第3个相同，所以相当于第3个也已经确定了 。所以是f(2)*2</li><li><u>R G P</u> (G)  下划线三个，代表f(3),因为第1个和第3个不同，留个第4位的只有一个选择了，所以是f(3)*1</li></ul></li><li><p>答案：</p></li></ul><p>​      </p><blockquote><pre><code>   import java.util.Scanner;   public class Main &#123;       public static void main(String[] args) &#123;           long [] a =new long [51];           a[1]=3;           a[2]=6;           a[3]=6;           for(int i=4;i&lt;=50;i++)           &#123;               a[i]=a[i-1]+2*a[i-2];           &#125;          Scanner in  = new Scanner(System.in);           while(in.hasNext()) &#123;              int n=in.nextInt();               System.out.println(a[n]);           &#125;           &#125;       &#125;</code></pre></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java语法随记</title>
      <link href="2020/11/25/java-yu-fa-sui-ji/"/>
      <url>2020/11/25/java-yu-fa-sui-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="java-math-BigDecimal的用法"><a href="#java-math-BigDecimal的用法" class="headerlink" title="java.math.BigDecimal的用法"></a>java.math.BigDecimal的用法</h2><ol><li><p>BigDecimal类型用来存储金额等有小数，需要精度的数据</p></li><li><p>BigDecimal不能直接使用int类型赋值！</p></li><li><p>两种使BigDecimal初始化为0的方法:<br>BigDecimal a=BigDecimal<br>BigDecimal b=new BigDecimal(0);<br>BigDecimal a = in.nextBigDecimal();</p><pre><code>* 除法运算：</code></pre><p>​      <code>System.out.println(new BigDecimal(153.5).divide(new BigDecimal(100), 2, BigDecimal.ROUND_HALF_UP));</code></p><p>　  <!--new BigDecimal(100)除数，2精确的位数，BigDecimal.ROUND_HALF_UP：舍入模式--></p><ul><li><p>加法运算：</p><p><code>System.out.println(new BigDecimal(&quot;2.005&quot;).add(new BigDecimal(&quot;0.03&quot;)));</code></p></li><li><p>减法运算：</p><p><code>System.out.println(new BigDecimal(&quot;2.00&quot;).subtract(new BigDecimal(&quot;1.10&quot;)));</code></p></li><li><p>乘法运算：</p><p><code>System.out.println(new BigDecimal(&quot;2.05&quot;).multiply(new BigDecimal(&quot;10&quot;)));</code></p></li></ul></li></ol><h3 id="char-SS-s-toCharArray"><a href="#char-SS-s-toCharArray" class="headerlink" title="char [] SS = s.toCharArray();"></a>char [] SS = s.toCharArray();</h3><ul><li><p><code>char [] SS = s.toCharArray();</code></p><!--把字符串中的每个字符放进ss的字符数组里--></li></ul><h3 id="s-contains-“4”-s-contains-“62”"><a href="#s-contains-“4”-s-contains-“62”" class="headerlink" title="s.contains(“4”)||s.contains(“62”)"></a>s.contains(“4”)||s.contains(“62”)</h3><ul><li><p>(s.contains(“4”)||s.contains(“62”)</p><!--判断s字符串里有没有包含"4"或"62"--></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git bash部分命令行的操作</title>
      <link href="2020/11/25/git-bash-bu-fen-ming-ling-xing-de-cao-zuo/"/>
      <url>2020/11/25/git-bash-bu-fen-ming-ling-xing-de-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h3 id="使用git-bash-创建文件及文件夹命令"><a href="#使用git-bash-创建文件及文件夹命令" class="headerlink" title="使用git bash 创建文件及文件夹命令"></a>使用git bash 创建文件及文件夹命令</h3><p>1.cd : 切换到哪个目录下， 如 cd e:\fff 切换 E 盘下面的fff 目录。<br>　　当我们用cd 进入文件夹时,我们可以使用 通配符*, cd f*, 如果E盘下只有一个f开头的文件夹,它就会进入到这个文件夹.<br>2.cd … 回退到上一个目录， 注意，cd 和两个点点…之间有一个空格。<br>3.pwd : 显示当前目录路径。<br>4.ls(ll): 都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。<br>5.touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。<br>6.rm: 删除一个文件, rm index.js 就会把index.js文件删除.<br>7.mkdir: 新建一个目录,就是新建一个文件夹. 如mkdir src 新建src 文件夹.<br>8.rm -r : 删除一个文件夹, rm -r src 删除src目录， 好像不能用通配符。<br>9.mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下.<br>10.reset 清屏，把git bash命令窗口中的所有内容清空。</p><h3 id="Vim编辑器的撤销与恢复撤销操作"><a href="#Vim编辑器的撤销与恢复撤销操作" class="headerlink" title="Vim编辑器的撤销与恢复撤销操作"></a>Vim编辑器的撤销与恢复撤销操作</h3><ol><li><p>使用vim修改文档内容</p></li><li><p>按下Esc，回到命令模式</p></li><li><p>按下u，可以发现刚刚新加的内容全部消失了，vim编辑器底部还会显示“4 行被去掉的操作提示”，这就是撤销操作。</p></li><li><p>如果我们想回复到撤销前的内容，按下ctrl+r</p><p>可以看到刚刚被我们撤掉的四行内容又回来了，而且vim编辑器底部会显示“4 行被加入的操作提示”，这就是恢复撤销操作。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>解决 java “错误：编码GBK 的不可映射字符”</title>
      <link href="2020/11/24/jie-jue-java-cuo-wu-bian-ma-gbk-de-bu-ke-ying-she-zi-fu/"/>
      <url>2020/11/24/jie-jue-java-cuo-wu-bian-ma-gbk-de-bu-ke-ying-she-zi-fu/</url>
      
        <content type="html"><![CDATA[<h2 id="解决-java-“错误：编码GBK-的不可映射字符”"><a href="#解决-java-“错误：编码GBK-的不可映射字符”" class="headerlink" title="解决 java “错误：编码GBK 的不可映射字符”"></a>解决 java “错误：编码GBK 的不可映射字符”</h2><ul><li><p>当java程序在idea上可以执行，但在cmd时报错：编码GBK 的不可映射字符时，通常都是因为GB2312编码的问题。</p></li><li><p>比如这个程序。在idea上运行时不会有问题的。用cmd运行时问题就出在第10行的<code>int xd =0//向导数</code>上，其中的“向导数”出了问题。</p><blockquote><pre><code>   Scanner in = new Scanner(System.in);   while (in.hasNext()) &#123;       int line = in.nextInt();       while (line-- &gt; 0) &#123;           int n = in.nextInt();//人数           int xd = 0;//向导数           int qx = n / 2;//抢险           int yl =(n-qx) *2 / 3;//医疗           int tx = n-qx - yl;//通讯           if (qx % 10 != 0) &#123;               xd = xd + qx / 10 + 1;           &#125; else &#123;               xd = xd + qx / 10;           &#125;           if (yl % 10 != 0) &#123;               xd = xd + yl / 10 + 1;           &#125; else &#123;               xd = xd + yl / 10;           &#125;           if (tx % 10 != 0) &#123;               xd = xd + tx / 10 + 1;           &#125; else &#123;               xd = xd + tx / 10;           &#125;           System.out.println(xd);       &#125;   &#125;</code></pre></blockquote></li><li><p>解决方法</p><ol><li><p>检查</p><p>查本机区域语言设置中文没有问题</p><p>需要把当前系统区域设置成中文（简体，中国）</p></li><li><p>在cmd中输入<code>javac -encoding UTF-8 HelloWorlewww.java</code></p><p>其中  <code>HelloWorlewww.java</code>就是你需要运行的java程序</p></li><li><p>记事本打开java源文件，另存为选择ANSI编码</p></li></ol><p>接下来重新用javac等操作编译，编译通过</p></li><li><p>说明：ANSI：美国国家标准协会，系统预设的标准文字储存格式。简体中文编码GB2312，实际上它是ＡＮＳＩ的一个代码页936</p><p>UTF-8：通用字集转换格式，这是为传输而设计的编码，2进制，以8位为单元对Unicode进行编码，如果使用只能在同类位元组内支持8个位元的重要资料一类的旧式传输媒体，可选择UTF-8格式。</p><p>在UTF-8里，英文字符仍然跟ASCII编码一样，因此原先的函数库可以继续使用。而中文的编码范围是在0080-07FF之间，因此是2个字节表示（但这两个字节和GB编码的两个字节是不同的），用专门的Unicode处理类可以对UTF编码进行处理。</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo部分命令</title>
      <link href="2020/11/24/hexo-bu-fen-ming-ling/"/>
      <url>2020/11/24/hexo-bu-fen-ming-ling/</url>
      
        <content type="html"><![CDATA[<p><code>hexo clean&amp;&amp; hexo g &amp;&amp; hexo d</code></p><p><code>hexo clean</code>#清理各种缓存和旧文件</p><p><code>hexo g</code>#生成静态文件</p><p><code>hexo s</code>#开启服务器预览</p><p><code>hexo new &quot;postName&quot;</code> #新建文章</p><p><code>hexo new page &quot;pageName&quot;</code> #新建页面</p><p><code>hexo generate</code> #生成静态页面至public目录</p><p><code>hexo server</code> #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）</p><p><code>hexo deploy</code> #将.deploy目录部署到GitHub</p><p><code>hexo help</code>  # 查看帮助</p><p><code>hexo version</code>  #查看Hexo的版本</p><p><code>hexo deploy -g</code>  #生成加部署</p><p><code>hexo server -g</code>  #生成加预览</p><p>命令的简写</p><p><code>hexo n</code> == <code>hexo new</code> </p><p><code>hexo g</code> == <code>hexo generate</code>  #生成文件</p><p><code>hexo s</code> == <code>hexo server</code> #运行本地服务器</p><p><code>hexo d</code> == <code>hexo deploy</code> #上传到服务器</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/24/hello-world/"/>
      <url>2020/11/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><blockquote><p>$ hexo new “My New Post”</p></blockquote><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><blockquote><p>$ hexo server</p></blockquote><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><blockquote><p>$ hexo generate</p></blockquote><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><blockquote><p>$ hexo deploy</p></blockquote><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
